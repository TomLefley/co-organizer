openapi: 3.1.0
info:
  title: Co-Organizer Server API
  description: |
    API specification for servers compatible with the Co-Organizer Burp Suite extension.
    
    Co-Organizer enables secure sharing of HTTP request/response items between security researchers.
    This specification documents the exact API contract that your server must implement to be compatible
    with the extension.
    
    ## Key Features
    - Upload shared items via multipart form data
    - Download shared items with automatic import detection  
    - Support for both encrypted (group-based) and unencrypted sharing
    - Optional debug ID header for troubleshooting
    
    ## Data Flow
    1. Extension shares Base64-encoded JSON data to `/share` endpoint
    2. Server returns an import URL in the response
    3. When the import URL is accessed, server returns the Base64 data
    4. Extension automatically detects and imports the data
    
    For more information, see: https://github.com/TomLefley/co-organizer
  version: 1.0.0
  license:
    name: GPL-3.0
    url: https://github.com/TomLefley/co-organizer/blob/main/LICENSE
  contact:
    name: Co-Organizer Repository
    url: https://github.com/TomLefley/co-organizer

servers:
  - url: http://localhost:3000
    description: Default local development server
  - url: https://localhost:3000  
    description: Local development server with HTTPS
  - url: http://example.com:8080
    description: Example custom server

paths:
  /share:
    post:
      summary: Share items
      description: |
        Accepts Base64-encoded JSON data containing HTTP request/response items.
        The data may be encrypted (for group sharing) or unencrypted.
        
        Returns an import URL that the extension will use to retrieve the data.
      operationId: shareItems
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - rr
              properties:
                rr:
                  type: string
                  format: binary
                  description: |
                    Base64-encoded JSON data containing the shared items.
                    
                    For unencrypted data: `{"data": "base64-encoded-http-items"}`
                    For encrypted data: `{"fingerprint": "group-fingerprint", "data": "encrypted-base64-data"}`
            encoding:
              rr:
                contentType: application/octet-stream
                headers:
                  Content-Transfer-Encoding:
                    schema:
                      type: string
                      enum: [base64]
      parameters:
        - name: X-Debug-Id
          in: header
          required: false
          schema:
            type: string
            format: uuid
            example: "12345678-1234-1234-1234-123456789012"
          description: |
            Optional debug identifier for troubleshooting.
            Generated automatically by the extension on first startup.
            Users can disable this for privacy by clearing the preference.
      responses:
        '200':
          description: Success - item shared successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - url
                properties:
                  url:
                    type: string
                    format: uri
                    description: Import URL for retrieving the shared items
                    example: "http://localhost:3000/abc123/import"
                    pattern: "^https?://[^/]+/.+/import$"
              examples:
                success:
                  summary: Successful share response
                  value:
                    url: "http://localhost:3000/abc123def456/import"
        '400':
          description: No item shared (no file in request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                no_file:
                  summary: No file in request
                  value:
                    error: "No item shared"
        '500':
          description: Failed to share item (server error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                server_error:
                  summary: Server error during sharing
                  value:
                    error: "Failed to share item"

  /{id}/import:
    get:
      summary: Import shared items
      description: |
        Returns the Base64-encoded data that was previously shared.
        The extension automatically detects URLs ending with `/import` and processes them.
        
        The returned data should be the exact Base64 string that was shared in the `rr` form field.
      operationId: importSharedItems
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: "^[a-zA-Z0-9_-]{64}$"
            example: "abc123def456789012345678901234567890123456789012345678901234"
          description: |
            Unique 64-character identifier for the shared items.
            Must be exactly 64 characters long using alphanumeric characters, underscores, or hyphens.
            This is typically generated by your server when items are shared.
      responses:
        '200':
          description: Success - item data returned
          content:
            text/plain:
              schema:
                type: string
                format: byte
                description: |
                  Raw Base64-encoded data (not JSON-wrapped).
                  
                  The content will be one of these JSON structures (Base64-encoded):
                  - Unencrypted: `{"data": "serialized-http-items"}`  
                  - Encrypted: `{"fingerprint": "group-id", "data": "encrypted-data"}`
              examples:
                unencrypted:
                  summary: Unencrypted shared data
                  description: Base64-encoded JSON with unencrypted HTTP items
                  value: "eyJkYXRhIjoiLi4uIn0="
                encrypted:
                  summary: Encrypted shared data  
                  description: Base64-encoded JSON with encrypted HTTP items for a group
                  value: "eyJmaW5nZXJwcmludCI6IkFCQ0QtMTIzNCIsImRhdGEiOiIuLi4ifQ=="
        '400':
          description: Invalid token (token missing or not 64 characters)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalid_token:
                  summary: Invalid token format
                  value:
                    error: "Invalid token"
        '404':
          description: Item not found (token doesn't exist in database)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                not_found:
                  summary: Item not found
                  value:
                    error: "Item not found"
        '500':
          description: Failed to serve item (server error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                server_error:
                  summary: Server error during import
                  value:
                    error: "Failed to serve item"

components:
  schemas:
    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Human-readable error message
          example: "Invalid request format"

  examples:
    UnencryptedData:
      summary: Unencrypted shared data structure
      description: JSON structure for unencrypted HTTP items (before Base64 encoding)
      value:
        data: "W3sicmVxdWVzdCI6Ii4uLiIsInJlc3BvbnNlIjoiLi4uIn1d"
        
    EncryptedData:
      summary: Encrypted shared data structure  
      description: JSON structure for group-encrypted HTTP items (before Base64 encoding)
      value:
        fingerprint: "ABCD-1234-EFGH-5678"
        data: "ZW5jcnlwdGVkLWRhdGEtaGVyZQ=="

  securitySchemes: {}

tags:
  - name: sharing
    description: Share and import shared HTTP items
  - name: debugging  
    description: Optional debugging and troubleshooting features

externalDocs:
  description: Co-Organizer GitHub Repository
  url: https://github.com/TomLefley/co-organizer